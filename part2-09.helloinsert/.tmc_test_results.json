[{"name": "test.test_database.DatabaseTest.test_add", "status": "failed", "message": "Lists differ: [] != [('Bean', 'Johnny English'), ('Fox', 'Sash[95 chars]nk')]\n\nSecond list contains 6 additional elements.\nFirst extra element 0:\n('Bean', 'Johnny English')\n\n- []\n+ [('Bean', 'Johnny English'),\n+  ('Fox', 'Sasha Nein'),\n+  ('Gecko', 'Gex'),\n+  ('Riddle', 'Voldemort'),\n+  ('Robocod', 'James Pond'),\n+  ('Secret', 'Clank')]", "passed": false, "points": ["2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5"], "backtrace": ["  File \"/usr/lib/python3.8/unittest/case.py\", line 60, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 676, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 633, in _callTestMethod\n    method()\n", "  File \"/home/taguchi/mooc-securing-software-21/part2-09.helloinsert/test/test_database.py\", line 84, in test_add\n    self.assertEqual(agents, [('Bean', 'Johnny English'), ('Fox', 'Sasha Nein'), ('Gecko', 'Gex'), ('Riddle', 'Voldemort'), ('Robocod', 'James Pond'), ('Secret', 'Clank')])\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1118, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1100, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_database.DatabaseTest.test_db1", "status": "failed", "message": "Lists differ: [] != [('Fox', 'Sasha Nein'), ('Gecko', 'Gex'), [67 chars]nk')]\n\nSecond list contains 5 additional elements.\nFirst extra element 0:\n('Fox', 'Sasha Nein')\n\n- []\n+ [('Fox', 'Sasha Nein'),\n+  ('Gecko', 'Gex'),\n+  ('Riddle', 'Voldemort'),\n+  ('Robocod', 'James Pond'),\n+  ('Secret', 'Clank')]", "passed": false, "points": ["2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5"], "backtrace": ["  File \"/usr/lib/python3.8/unittest/case.py\", line 60, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 676, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 633, in _callTestMethod\n    method()\n", "  File \"/home/taguchi/mooc-securing-software-21/part2-09.helloinsert/test/test_database.py\", line 51, in test_db1\n    self.assertEqual(agents, [('Fox', 'Sasha Nein'), ('Gecko', 'Gex'), ('Riddle', 'Voldemort'), ('Robocod', 'James Pond'), ('Secret', 'Clank')])\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1118, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1100, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_database.DatabaseTest.test_db2", "status": "passed", "message": "", "passed": true, "points": ["2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5"], "backtrace": []}, {"name": "test.test_database.DatabaseTest.test_db3", "status": "failed", "message": "Lists differ: [] != [('Fox', 'Sasha Nein'), ('Riddle', 'Voldemort'), ('Secret', 'Clank')]\n\nSecond list contains 3 additional elements.\nFirst extra element 0:\n('Fox', 'Sasha Nein')\n\n- []\n+ [('Fox', 'Sasha Nein'), ('Riddle', 'Voldemort'), ('Secret', 'Clank')]", "passed": false, "points": ["2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5"], "backtrace": ["  File \"/usr/lib/python3.8/unittest/case.py\", line 60, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 676, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 633, in _callTestMethod\n    method()\n", "  File \"/home/taguchi/mooc-securing-software-21/part2-09.helloinsert/test/test_database.py\", line 67, in test_db3\n    self.assertEqual(agents, [('Fox', 'Sasha Nein'), ('Riddle', 'Voldemort'), ('Secret', 'Clank')])\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1118, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1100, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_database.DatabaseTest.test_delete", "status": "failed", "message": "Lists differ: [] != [('Gecko', 'Gex'), ('Riddle', 'Voldemort')[44 chars]nk')]\n\nSecond list contains 4 additional elements.\nFirst extra element 0:\n('Gecko', 'Gex')\n\n- []\n+ [('Gecko', 'Gex'),\n+  ('Riddle', 'Voldemort'),\n+  ('Robocod', 'James Pond'),\n+  ('Secret', 'Clank')]", "passed": false, "points": ["2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5"], "backtrace": ["  File \"/usr/lib/python3.8/unittest/case.py\", line 60, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 676, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 633, in _callTestMethod\n    method()\n", "  File \"/home/taguchi/mooc-securing-software-21/part2-09.helloinsert/test/test_database.py\", line 95, in test_delete\n    self.assertEqual(agents, [('Gecko', 'Gex'), ('Riddle', 'Voldemort'), ('Robocod', 'James Pond'), ('Secret', 'Clank')])\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1118, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1100, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_database.DatabaseTest.test_injection", "status": "failed", "message": "Lists differ: [] != [('Fox', 'Sasha Nein'), ('Gecko', 'Gex'), [67 chars]nk')]\n\nSecond list contains 5 additional elements.\nFirst extra element 0:\n('Fox', 'Sasha Nein')\n\n- []\n+ [('Fox', 'Sasha Nein'),\n+  ('Gecko', 'Gex'),\n+  ('Riddle', 'Voldemort'),\n+  ('Robocod', 'James Pond'),\n+  ('Secret', 'Clank')]", "passed": false, "points": ["2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5"], "backtrace": ["  File \"/usr/lib/python3.8/unittest/case.py\", line 60, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 676, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 633, in _callTestMethod\n    method()\n", "  File \"/home/taguchi/mooc-securing-software-21/part2-09.helloinsert/test/test_database.py\", line 106, in test_injection\n    self.assertEqual(agents, [('Fox', 'Sasha Nein'), ('Gecko', 'Gex'), ('Riddle', 'Voldemort'), ('Robocod', 'James Pond'), ('Secret', 'Clank')])\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 912, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1118, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 1100, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.8/unittest/case.py\", line 753, in fail\n    raise self.failureException(msg)\n"]}]